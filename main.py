#!./env/bin/python

import pymesh
import numpy as np
import random
import math
import uuid
import sys
from generateMesh import generateMesh
from continents import Continent


mesh = generateMesh(1000)
mesh.enable_connectivity()

import trimesh
import pyrender
# This loads the mesh into a different format. Mostly because it is easier to render in the next line
#tm = trimesh.base.Trimesh(mesh.vertices,mesh.faces,process=True,validate=True)
# This launches a very basic mesh viewer
#tm.show()


# Now we want to make continents. These are collections of faces that are generated by starting a floodfill in numerous locations simulatenously until there are no unallocated faces left

# Add the Continent ID attribute to the Mesh
mesh.add_attribute("continentID")
val = np.zeros(mesh.num_faces)
mesh.set_attribute("continentID",val);



nContinents = random.randint(2,12) 
Continents = []

cont = Continent(uuid.uuid4(),1)
cont.mesh = mesh
cont.stepFill()
cont.stepFill()
cont.stepFill()

#for x in range(nContinents):
#    continentid = uuid.uuid4()
#    randomFaceElementNumber = random.randint(0,len(mesh.faces))
#    Continents.append(Continent(continentid,randomFaceElementNumber))
#    Continents[x].mesh = mesh


#for x in range(1):
#    for continent in Continents:
#            continent.stepFill()

